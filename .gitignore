# .gitignore

# Node Version Manager files
.nvmrc
.node-version

# Dependencies
/node_modules

# Build output
/dist

# Environment variables (contains secrets!)
.env
.env.*.local
.env.local
.env.development
.env.test
.env.production

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (if used)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# VS Code specific
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Optional: JetBrains IDEs specific (WebStorm, IntelliJ)
.idea

# Optional: Sublime Text specific
*.sublime-project
*.sublime-workspace

# Optional: Vim specific
*.swp
*.swo

# Optional: Emacs specific
*~
#*#

# Mac specific
.DS_Store
.AppleDouble
.LSOverride

# Thumbnails cache files for Windows
Thumbs.db
ehthumbs.db

# Optional: Prisma generated client (can be regenerated)
# /prisma/generated/client

# Optional: Test report outputs
/junit.xml

# Optional: If using Next.js within the same repo structure (adjust if needed)
# .next/
# out/

# Optional: Yarn cache directory
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*